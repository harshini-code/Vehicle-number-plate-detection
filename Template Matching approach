import cv2
from google.colab.patches import cv2_imshow
import easyocr
def detect_number_plate(image_path, template_path):
 # Load the input image and the template
 img = cv2.imread(image_path)
 template = cv2.imread(template_path, cv2.IMREAD_GRAYSCALE)
 # Check if image and template are loaded successfully
 if img is None or template is None:
 print("Error: Could not load image or template.")
 return
 # Convert the input image to grayscale
 img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
 # Match the template with the input image
 result = cv2.matchTemplate(img_gray, template, cv2.TM_CCOEFF_NORMED)
 min_val, max_val, min_loc, max_loc = cv2.minMaxLoc(result)
 # Get the coordinates of the matched region
 top_left = max_loc
 h, w = template.shape
 # Draw a rectangle around the matched region
 bottom_right = (top_left[0] + w, top_left[1] + h)
 cv2.rectangle(img, top_left, bottom_right, (0, 255, 0), 2)
 # Extract the region of interest (ROI) containing the number plate
 roi = img[top_left[1]:bottom_right[1], top_left[0]:bottom_right[0]]
 # Convert the ROI to grayscale
 roi_gray = cv2.cvtColor(roi, cv2.COLOR_BGR2GRAY)
 # Use EasyOCR to extract text from the number plate region
 reader = easyocr.Reader(['en'])
 plate_text = reader.readtext(roi_gray)
 # Display the result using cv2_imshow
 cv2_imshow(img)
 print("Detected Number Plate:", plate_text)
 cv2.waitKey(0)
 cv2.destroyAllWindows()
# Example usage
image_path = 'img_path.jpg'
template_path = 'template_path.jpg'
detect_number_plate(image_path, template_path)
